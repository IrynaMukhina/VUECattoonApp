{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport { onMounted, ref, computed } from \"vue\";\nimport { useStore } from \"vuex\";\nimport CharacterFilters from \"../components/CharacterFilters.vue\";\nimport CharacterCard from \"../components/CharacterCard.vue\";\nimport CharacterPagination from \"../components/CharacterPagination.vue\";\nexport default {\n  components: {\n    CharacterFilters,\n    CharacterCard,\n    CharacterPagination\n  },\n  setup() {\n    const store = useStore();\n    const characters = ref([]);\n    const filters = ref({\n      name: \"\",\n      species: \"\"\n    });\n    const currentPage = ref(1);\n    const totalPages = ref(1);\n\n    // Fetch characters from API\n    const fetchCharacters = async (page = 1) => {\n      currentPage.value = page;\n      await store.dispatch(\"fetchCharacters\", {\n        page\n      });\n      characters.value = store.state.characters;\n\n      // Update the total pages from the API response\n      // Assuming this value comes from the API\n      totalPages.value = Math.ceil(100 / 20); // Replace 100 with total characters and 20 with per-page count\n    };\n\n    // Filtered characters based on search and species\n    const filteredCharacters = computed(() => {\n      return characters.value.filter(character => {\n        const matchesName = character.name.toLowerCase().includes(filters.value.name.toLowerCase());\n        const matchesSpecies = !filters.value.species || character.species === filters.value.species;\n        return matchesName && matchesSpecies;\n      });\n    });\n\n    // Update filters and refetch characters\n    const applyFilters = newFilters => {\n      filters.value = {\n        ...filters.value,\n        ...newFilters\n      };\n    };\n    onMounted(() => {\n      fetchCharacters();\n    });\n    return {\n      characters,\n      filteredCharacters,\n      fetchCharacters,\n      applyFilters,\n      currentPage,\n      totalPages\n    };\n  }\n};","map":{"version":3,"names":["onMounted","ref","computed","useStore","CharacterFilters","CharacterCard","CharacterPagination","components","setup","store","characters","filters","name","species","currentPage","totalPages","fetchCharacters","page","value","dispatch","state","Math","ceil","filteredCharacters","filter","character","matchesName","toLowerCase","includes","matchesSpecies","applyFilters","newFilters"],"sources":["/Users/imukhina/Desktop/VueCartoonProject/VUECattoonApp/src/views/CharacterList.vue"],"sourcesContent":["<template>\n  <div>\n    <CharacterFilters @filter=\"applyFilters\" />\n    <div class=\"character-list\">\n      <CharacterCard\n        v-for=\"character in filteredCharacters\"\n        :key=\"character.id\"\n        :character=\"character\"\n      />\n    </div>\n    <CharacterPagination\n      :currentPage=\"currentPage\"\n      :totalPages=\"totalPages\"\n      @change-page=\"fetchCharacters\"\n    />\n  </div>\n</template>\n\n<script>\nimport { onMounted, ref, computed } from \"vue\";\nimport { useStore } from \"vuex\";\nimport CharacterFilters from \"../components/CharacterFilters.vue\";\nimport CharacterCard from \"../components/CharacterCard.vue\";\nimport CharacterPagination from \"../components/CharacterPagination.vue\";\n\nexport default {\n  components: { CharacterFilters, CharacterCard, CharacterPagination },\n  setup() {\n    const store = useStore();\n    const characters = ref([]);\n    const filters = ref({ name: \"\", species: \"\" });\n    const currentPage = ref(1);\n    const totalPages = ref(1);\n\n    // Fetch characters from API\n    const fetchCharacters = async (page = 1) => {\n      currentPage.value = page;\n      await store.dispatch(\"fetchCharacters\", { page });\n      characters.value = store.state.characters;\n\n      // Update the total pages from the API response\n      // Assuming this value comes from the API\n      totalPages.value = Math.ceil(100 / 20); // Replace 100 with total characters and 20 with per-page count\n    };\n\n    // Filtered characters based on search and species\n    const filteredCharacters = computed(() => {\n      return characters.value.filter((character) => {\n        const matchesName = character.name\n          .toLowerCase()\n          .includes(filters.value.name.toLowerCase());\n        const matchesSpecies =\n          !filters.value.species || character.species === filters.value.species;\n        return matchesName && matchesSpecies;\n      });\n    });\n\n    // Update filters and refetch characters\n    const applyFilters = (newFilters) => {\n      filters.value = { ...filters.value, ...newFilters };\n    };\n\n    onMounted(() => {\n      fetchCharacters();\n    });\n\n    return {\n      characters,\n      filteredCharacters,\n      fetchCharacters,\n      applyFilters,\n      currentPage,\n      totalPages,\n    };\n  },\n};\n</script>\n"],"mappings":";;AAmBA,SAASA,SAAS,EAAEC,GAAG,EAAEC,QAAO,QAAS,KAAK;AAC9C,SAASC,QAAO,QAAS,MAAM;AAC/B,OAAOC,gBAAe,MAAO,oCAAoC;AACjE,OAAOC,aAAY,MAAO,iCAAiC;AAC3D,OAAOC,mBAAkB,MAAO,uCAAuC;AAEvE,eAAe;EACbC,UAAU,EAAE;IAAEH,gBAAgB;IAAEC,aAAa;IAAEC;EAAoB,CAAC;EACpEE,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIN,QAAQ,CAAC,CAAC;IACxB,MAAMO,UAAS,GAAIT,GAAG,CAAC,EAAE,CAAC;IAC1B,MAAMU,OAAM,GAAIV,GAAG,CAAC;MAAEW,IAAI,EAAE,EAAE;MAAEC,OAAO,EAAE;IAAG,CAAC,CAAC;IAC9C,MAAMC,WAAU,GAAIb,GAAG,CAAC,CAAC,CAAC;IAC1B,MAAMc,UAAS,GAAId,GAAG,CAAC,CAAC,CAAC;;IAEzB;IACA,MAAMe,eAAc,GAAI,MAAAA,CAAOC,IAAG,GAAI,CAAC,KAAK;MAC1CH,WAAW,CAACI,KAAI,GAAID,IAAI;MACxB,MAAMR,KAAK,CAACU,QAAQ,CAAC,iBAAiB,EAAE;QAAEF;MAAK,CAAC,CAAC;MACjDP,UAAU,CAACQ,KAAI,GAAIT,KAAK,CAACW,KAAK,CAACV,UAAU;;MAEzC;MACA;MACAK,UAAU,CAACG,KAAI,GAAIG,IAAI,CAACC,IAAI,CAAC,GAAE,GAAI,EAAE,CAAC,EAAE;IAC1C,CAAC;;IAED;IACA,MAAMC,kBAAiB,GAAIrB,QAAQ,CAAC,MAAM;MACxC,OAAOQ,UAAU,CAACQ,KAAK,CAACM,MAAM,CAAEC,SAAS,IAAK;QAC5C,MAAMC,WAAU,GAAID,SAAS,CAACb,IAAG,CAC9Be,WAAW,CAAC,EACZC,QAAQ,CAACjB,OAAO,CAACO,KAAK,CAACN,IAAI,CAACe,WAAW,CAAC,CAAC,CAAC;QAC7C,MAAME,cAAa,GACjB,CAAClB,OAAO,CAACO,KAAK,CAACL,OAAM,IAAKY,SAAS,CAACZ,OAAM,KAAMF,OAAO,CAACO,KAAK,CAACL,OAAO;QACvE,OAAOa,WAAU,IAAKG,cAAc;MACtC,CAAC,CAAC;IACJ,CAAC,CAAC;;IAEF;IACA,MAAMC,YAAW,GAAKC,UAAU,IAAK;MACnCpB,OAAO,CAACO,KAAI,GAAI;QAAE,GAAGP,OAAO,CAACO,KAAK;QAAE,GAAGa;MAAW,CAAC;IACrD,CAAC;IAED/B,SAAS,CAAC,MAAM;MACdgB,eAAe,CAAC,CAAC;IACnB,CAAC,CAAC;IAEF,OAAO;MACLN,UAAU;MACVa,kBAAkB;MAClBP,eAAe;MACfc,YAAY;MACZhB,WAAW;MACXC;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}