{"ast":null,"code":"import { computed, onMounted, ref } from 'vue';\nimport { useStore } from 'vuex';\nimport { useRoute } from 'vue-router';\nexport default {\n  setup() {\n    const store = useStore();\n    const route = useRoute();\n    const character = ref(null);\n    const fetchCharacter = async () => {\n      const response = await fetch(`https://rickandmortyapi.com/api/character/${route.params.id}`);\n      character.value = await response.json();\n    };\n    const isFavorite = computed(() => store.getters.isFavorite(character.value?.id));\n    const toggleFavorite = () => {\n      if (character.value) {\n        if (isFavorite.value) {\n          store.commit('removeFavorite', character.value.id);\n        } else {\n          store.commit('addFavorite', character.value);\n        }\n      }\n    };\n    onMounted(() => {\n      fetchCharacter();\n    });\n    return {\n      character,\n      isFavorite,\n      toggleFavorite\n    };\n  }\n};","map":{"version":3,"names":["computed","onMounted","ref","useStore","useRoute","setup","store","route","character","fetchCharacter","response","fetch","params","id","value","json","isFavorite","getters","toggleFavorite","commit"],"sources":["/Users/imukhina/Desktop/VueCartoonProject/VUECattoonApp/src/views/CharacterDetail.vue"],"sourcesContent":["<template>\n  <div>\n    <img :src=\"character.image\" :alt=\"character.name\" />\n    <h1>{{ character.name }}</h1>\n    <p>Species: {{ character.species }}</p>\n    <p>Status: {{ character.status }}</p>\n    <p>Last known location: {{ character.location.name }}</p>\n    <p>First seen in: {{ character.episode[0] }}</p>\n    <button @click=\"toggleFavorite\">\n      {{ isFavorite ? 'Remove from Favorites' : 'Add to Favorites' }}\n    </button>\n  </div>\n</template>\n\n<script>\nimport { computed, onMounted, ref } from 'vue';\nimport { useStore } from 'vuex';\nimport { useRoute } from 'vue-router';\n\nexport default {\n  setup() {\n    const store = useStore();\n    const route = useRoute();\n    const character = ref(null);\n\n    const fetchCharacter = async () => {\n      const response = await fetch(`https://rickandmortyapi.com/api/character/${route.params.id}`);\n      character.value = await response.json();\n    };\n\n    const isFavorite = computed(() => store.getters.isFavorite(character.value?.id));\n\n    const toggleFavorite = () => {\n      if (character.value) {\n        if (isFavorite.value) {\n          store.commit('removeFavorite', character.value.id);\n        } else {\n          store.commit('addFavorite', character.value);\n        }\n      }\n    };\n\n    onMounted(() => {\n      fetchCharacter();\n    });\n\n    return { character, isFavorite, toggleFavorite };\n  },\n};\n</script>\n"],"mappings":"AAeA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,GAAE,QAAS,KAAK;AAC9C,SAASC,QAAO,QAAS,MAAM;AAC/B,SAASC,QAAO,QAAS,YAAY;AAErC,eAAe;EACbC,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIH,QAAQ,CAAC,CAAC;IACxB,MAAMI,KAAI,GAAIH,QAAQ,CAAC,CAAC;IACxB,MAAMI,SAAQ,GAAIN,GAAG,CAAC,IAAI,CAAC;IAE3B,MAAMO,cAAa,GAAI,MAAAA,CAAA,KAAY;MACjC,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAAC,6CAA6CJ,KAAK,CAACK,MAAM,CAACC,EAAE,EAAE,CAAC;MAC5FL,SAAS,CAACM,KAAI,GAAI,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IACzC,CAAC;IAED,MAAMC,UAAS,GAAIhB,QAAQ,CAAC,MAAMM,KAAK,CAACW,OAAO,CAACD,UAAU,CAACR,SAAS,CAACM,KAAK,EAAED,EAAE,CAAC,CAAC;IAEhF,MAAMK,cAAa,GAAIA,CAAA,KAAM;MAC3B,IAAIV,SAAS,CAACM,KAAK,EAAE;QACnB,IAAIE,UAAU,CAACF,KAAK,EAAE;UACpBR,KAAK,CAACa,MAAM,CAAC,gBAAgB,EAAEX,SAAS,CAACM,KAAK,CAACD,EAAE,CAAC;QACpD,OAAO;UACLP,KAAK,CAACa,MAAM,CAAC,aAAa,EAAEX,SAAS,CAACM,KAAK,CAAC;QAC9C;MACF;IACF,CAAC;IAEDb,SAAS,CAAC,MAAM;MACdQ,cAAc,CAAC,CAAC;IAClB,CAAC,CAAC;IAEF,OAAO;MAAED,SAAS;MAAEQ,UAAU;MAAEE;IAAe,CAAC;EAClD;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}